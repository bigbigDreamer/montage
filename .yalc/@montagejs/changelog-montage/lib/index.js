"use strict";var H=require("execa"),I=require("os"),K=require("path"),V=require("path-is-absolute");function g(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var j=g(H),W=g(I),L=g(K),z=g(V);function C(e,n,a,i,t,u,o){try{var c=e[u](o),r=c.value}catch(f){a(f);return}c.done?n(r):Promise.resolve(r).then(i,t)}function D(e){return function(){var n=this,a=arguments;return new Promise(function(i,t){var u=e.apply(n,a);function o(r){C(u,i,t,o,c,"next",r)}function c(r){C(u,i,t,o,c,"throw",r)}o(void 0)})}}function B(e,n){if(e==null)return{};var a={},i=Object.keys(e),t,u;for(u=0;u<i.length;u++)t=i[u],!(n.indexOf(t)>=0)&&(a[t]=e[t]);return a}var O=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function J(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var b={exports:{}},x={exports:{}};(function(e,n){Object.defineProperty(n,"__esModule",{value:!0});var a=j.default,i=f(a),t=W.default,u=L.default,o=f(u),c=z.default,r=f(c);function f(s){return s&&s.__esModule?s:{default:s}}var v=process.cwd(),m=function(){var d=arguments.length>0&&arguments[0]!==void 0?arguments[0]:v,l=(0,r.default)(d)?d:o.default.join(v,d);try{return(0,t.platform)()==="win32"?i.default.shellSync("pushd "+l+" & git status"):i.default.shellSync("(cd "+l+" ; ([ -d .git ] && echo .git) || git rev-parse --git-dir 2> /dev/null)"),!0}catch{return!1}};n.default=m,e.exports=n.default})(x,x.exports),function(e,n){var a=O&&O.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(n,"__esModule",{value:!0});var i=a(j.default),t=a(x.exports),u=a(L.default),o=/\s+([\s\S]*)/g,c=function(r){var f,v,m,s;r===void 0&&(r={});var d=r.cwd,l=d===void 0?process.cwd():d,p=r.commit,k=p||"",M=u.default.resolve(l);if(!t.default(M))return{};try{var q=i.default.commandSync("git --no-pager show "+k+" --summary",{cwd:l}).stdout,_=q.split(`
`).filter(function(h){return h.length!==0}),$=((f=_[1])===null||f===void 0?void 0:f.indexOf("Merge"))===-1?0:1,y=(new RegExp(o).exec(_[0])||[])[1],P=y.slice(0,7),w=function(h){var F=new RegExp(o).exec(_[h])||[],A=F[1];return A},R=(m=(((v=w(1+$))===null||v===void 0?void 0:v.match(/([^<]+)/))||[])[1])===null||m===void 0?void 0:m.trim(),S=((s=w(1+$))===null||s===void 0?void 0:s.match(/<([^>]+)>/))||[],G=S[1],E=w(2+$),T=q.split(`

`)[1].trim();return{hash:y,shortHash:P,commit:y,shortCommit:P,author:R,email:G,date:E,message:T}}catch(h){return{error:h}}};n.default=c,e.exports=n.default}(b,b.exports);var N=J(b.exports);const Q=D(function*(e,n,a){if(!a||!a.repo)throw new Error(`Please provide a repo to this changelog generator like this:
"changelog": ["@changesets/changelog-github", { "repo": "org/repo" }]`);const i=N(),{shortHash:t}=i,u=B(i,["shortHash"]);console.log(t,u,"res");let o,c=[a.author];const r=e.summary.replace(/^\s*(?:pr|pull|pull\s+request):\s*#?(\d+)/im,(l,p)=>"").replace(/^\s*commit:\s*([^\s]+)/im,(l,p)=>(o=t||p,"")).trim(),[f,...v]=r.split(`
`).map(l=>l.trimRight()),m={commit:`[\`${o}\`](https://github.com/${a.repo}/commit/${o})`},s=c.map(l=>`[@${l}](https://github.com/${l})`).join(", "),d=[m.commit===null?"":` ${m.commit}`,s===null?"":` Thanks ${s}!`].join("");return`

-${d?`${d} -`:""} ${f}
${v.map(l=>`  ${l}`).join(`
`)}`}),U=D(function*(e,n){if(n.length===0)return"";const a=e.map(t=>`- Updated dependencies${t.commit?` [${t.commit}]`:""}`),i=n.map(t=>`  - ${t.name}@${t.newVersion}`);return[...a,...i].join(`
`)}),X={getReleaseLine:Q,getDependencyReleaseLine:U};module.exports=X;
//# sourceMappingURL=index.js.map
